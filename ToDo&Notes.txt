To-Do:
1. More stats outputs like from backtesting.py and QuantStats.
2. Handle multiple coin pairs. ETH and BTC is perfect for testing right now.
3. Clean up readme & Comments on what functions do.
4. Download the next top 20 coins too (2017 to present).
5. Actually make a good strategy. (Find Optimal TP/SL levels. Optimal trailing SL level. Optimal Entry.)
6. Eventually make streamlined process for any strategy. (Data --> Any Trade Strategy --> Results and Analysis). (would be pretty complex to package it nicely.)
7. Determine if 'multiple tp/sl hit within same candle' is even an issue. Can already enter and exit within same candle, and I think sl's are prioritized over tp's, so if a trailing stop loss and tp hit in same candle, maybe both are hit, or just says the trailing stop loss is.

Tips:

- Use 'returns from entry' to get ideas for good Entries/TP levels/SL levels/hold time.
- GOAL: Low drawdowns, Low Volatility, High returns. min(max_drawdown), min(max_volatility), max(returns)
- Trades on lower timeframe (entry on 5 min) but looks at 15m/30m/1hr/daily also, just how professionals do.
- ex: if volume on last candle > avg(volume) of the line, the PNL is slightly better

Stats:
-Best trade % gain, worst trade % gain, avg trade % gain
-Monthly/Daily % returns (Will look like brownian motion/noise mostly). (Monthly vs benchmark) (graph daily, seems to be bar chart?)
-Avg up month %, Avg down month %, win days %, win month %, Best Day/Month %, Worst Day/Month %
-Graph Distribution of Daily returns % (Will look like your trade samples one you made) 
-Daily/Monthly EV/expected return %. (Perhaps from that random sampling, will be a probability.)
-SP500 hodl PNL (graph vs our cumulative pnl) (And another plot for (Volatility matched))

-Kelly Critierion % 
-Expected Shortfall (cVaR) %
-Graph for 6 month rolling sharpe, sortino, volatility, and their average (horizontal line on the graph). Record avgs to 'trade_stats_df'.


Channel thoughts:
--> Non-zero slope concept of horizontal resistance and support lines. Bottom slope is support line, top slope is resistance line. With the added problem that both lines need to have similar/same slope in order for the channel to exist. So channels are quite rare. Based on least squares for the middle/top/bottom lines.
--> What constitutes a touch point/area? Can make this hyper complex with weights and all sorts of clever thresholds (weighting wicks, volatility and ATR, clumping amount, time between touches, etc.)
--> Would you generate the top line/bottom line or the middle line first and just use that slope? Minimum threshold to generate a channel.
--> Trade entry location









That code worked correctly for the top_1_drawdown but the others were incorrect, as they were still just within the same drawdown, but just points that were around the bottom, rather than other new drawdown locations. So I'm going to scrap that code, and also put that local peak with the running max to find the longest drawdown to the side for right now. So I actually need to pivot and rethink my needs a bit. I'd like to just talk through things and make sure I have the English logic correct before we start coding anything. Here are the things I'm looking for:

-Average drawdown (amount and pct), and the average length of number of minutes it took to recover. So we'll essentially have to find every drawdowns statistics for its amount, percentage, and time to recover, and then do a mean of that.

-Worst 3 drawdowns (amount and pct), and the number of minutes it took to recover. (This will be 9 columns total, 'top_1_drawdown', 'top_1_drawdown_pct', 'top_1_recover_time', 'top_2_drawdown', 'top_2_drawdown_pct', 'top_2_recover_time', 'top_3_drawdown', 'top_3_drawdown_pct', 'top_3_recover_time'.

