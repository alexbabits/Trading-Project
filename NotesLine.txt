- Use HLC/3 average rather than just 'close'?

Coding Thoughts/Process (Code how a trader sees):

Goal: 
- Identify horizontal support/resistance lines.
- Make simple strategy based on returns after line break. Define an entry. Define a stop loss. Define take profit levels. Do for all top 25 cryptos. Get ~5000 rows of data with statistics: returns, distance from MA's, atr, volume, number of taps on line, etc.
- Try to see if we can fit some pattern in positive returns with the data, then we run backtest for optimization.

To-do:
- Gather returns and price data from the lines. Returns after break. price action during line. We can add statistics to that later (volume, distance from MA)
- Do same for horizontal support lines.

Tweaks:
- Variable number of candles as 'rest period' instead of just 10.
- Include wicks (high/low/open/close) in some capacity (50% of their length, some % weight, include in touch points, include in bounds and limits).
- Minimum line length, could just filter dataframe aftwards too. Ex: 40 candle minimum.
- next_candle's ATR instead of current_candle's ATR.
- After drawing line, find a clever way to count how many 'touch points' there were. Good for trading analysis?
- first green candle/point: Measure y-intercept between the high and the close instead of just the close, maybe a weighted avg (0.75*close + 0.25*high)

