- Use HLC/3 average rather than just 'close'?
- Trade how a coder sees.

Coding Thoughts/Process:

0. Goal: Identify horizontal support/resistance lines with live rolling data, make strategy based on returns info collected. We do this by collecting data from the line and then its breakout, for say top 25 cryptos. Get ~5000 datapoints with returns afterwards. Then we can add some data info regarding every data point (distance vs ma200, atr/channel, returns, etc.) and try to see if we can fit some pattern in positive returns with the data. When we say 'line' we are technically referring to a 'ray' starting from the initial candle of interest pointing to the right.

1. Process: Run a function to identify a horizontal support/resistance line. Iterate through each candle info (OHLC) in the database row by row, one by one, and then we say:

For a resistance line:

If from this current candle, we wait at least 10 candles later and we continue searching after that 10 candle rest period, and then there is another candle that has a similar open/close (within 50% ATR of the first candles open/close), then we've got a line where the slope is zero and the y-intercept is the first candles open/close. And so it now will have a tentative line since there are two touch points, but not yet fully validated. And then we rest again for 10 candles after the second candles point, and then if there is a 3rd candle that touches the line (within 50% ATR of the line), then the line exists and is fully validated and should be drawn.

At any time during or after this process, including the waiting periods, the validation of the line would be terminated and we could move onto the next candle in the dataframe if the price goes up more than 50-100% of the current candles ATR above it's open/close price. 

Otherwise, the line basically continues until it is invalidated or price reaches something like 5 ATR's away from the line. 


For a support line:

If from this current candle, we wait at least 10 candles later and we continue searching after that 10 candle rest period, and then there is another candle that is the same/similar Open/Close (+-50% ATR from original candles open/close), then we've got a line where the slope is zero and the y-intercept is the first candles open/close. And so it now will have a tentative line since there are two points, but not yet fully validated. And then we rest again for 10 candles after the second candles point, and then if there is a 3rd candle after that which touches the line, then the line exists and is fully validated and should be drawn. Also, at any time during this process, the validation of the line would be terminated and we could move onto the next candle in the dataframe if anytime the price went too high or too low in comparison to the current candles open or high we are looking at, including the rest periods (50% ATR above the line if it's a resistance line, or 50% ATR below the line if it's a support line). Otherwise, the line basically continues until it is invalidated or price reaches something like 5 ATR's away from the line. 


2. Details: 
- There are two basic kinds of horizontal lines, resistance and support. We should probably focus on just one. For example: Resistance lines are where the price does not go above, and vice versa for support lines.
- May need variable number of candles as 'rest period' instead of just 10.
- For simplicity we may start by completely ignoring wicks (highs/lows) and focus only on open and close data. Later we could weigh wicks some % less than solid open/close prices, (idea would be to dampen or ignore wicks/outliers).
- Whole line must span at least 40 candles by the 3rd touchpoint to be validated.
- Want to make sure we are 'rolling' through the data as if we were a live trader, so we don't have access to future prices while going through our dataframe. Roll through data just like a day would pass, so (i) is “live” and (:i) is what we can use? If we go through historical data simulating "live" by rolling through df, we can capture info without lookahead bias. 
- We are looking to get a snapshot of the price action during the entire line itself, and then the price action and returns after the line is broken. Either a set amount of candles after it breaks of like 100, or some % of candles compared to the line length. We can add statistics to that later (volume in breakout, distance from MA, etc.)

Example Strategy: So we see 1,2 and maybe 3 touches on a line, now whenever price touches low, we enter in this trade. Use SL and TP levels. Then we run backtest for optimization.

