Goal: 
- Identify horizontal support/resistance lines.
- Define an entry. Define a SL. Define TP levels. Do for all top 25 cryptos. Get ~5000 rows of data with statistics: returns, distance from MA's, atr, volume, number of taps on line, etc. Try to see if we can fit some pattern in positive returns with the data. Backtest to optimize SL/TP/etc.

To-do:
- Define SL, TP levels during trade.
- Make horizontal support lines.
- Do all cleanup before modifying core code function.

Tweaks:




Line price right now is based on the origin candles close. I'd like to make it a weighted mean between the high and the close, so something like weighted_mean(0.6*close + 0.4*high).

Second touch point to include wicks or something similar to what line price did, such as mean or weighted_mean
Third touch point to include wicks or something similar to what line price did, such as mean or weighted_mean
upper limit to include wicks or something similar to what line price did, such as mean or weighted_mean
Bottom_limit to include wicks or something similar to what line price did, such as mean or weighted_mean, (wicks would be 'low' and not 'high')















- Generally polish code see if functions can be split up to be more readable, comment better, etc.


- Identify all touchpoints, not just up to 3. Base trade of #3 or #4. (Have column for 'Total Number of Touch Points'). Requires re-working 'find_third_touch' function.
 THIS IS GREAT BECAUSE can just do it all in that first function, a line is created after 2 points, but we look for rest of points.
 Or still break it up into (2 points function initial for horizontal line) (then function that finds the rest of the points).