--> Make it so you can just pip install your trading package and then do 'backtesting(price_and_indicators_df,trades_df)' Where it gives you all the results.

--> Ex: e0 to e1 is, if majority turn negative, then perhaps that entry isn't the best. (And of course if most returns are negative then it's a bad strategy in general, and if you are exiting too early compared to the peak of the returns, then you can tweak the exits through this.). 

--> trading results (draw down, pnl graph, avg xyz)?


price and simple indicators --> (This is btc_usdt_df)
complex indicators --> (This is resistance_lines_df)
trade results --> (This is trade_results_Df)


'simple/objective indicators' like RSI/MACD/ATR/EMA/SMA/etc. 100% based on price & time with simple formula. Calculable in single line of code, everyone agrees that it is indeed the only and correct way to do it.

'complex/subjective indicators' like [(resistance lines, support lines, channels) --> (with 0 or non-0 slopes)], price zones, RSI divs, Fib retracements. Requires sophisticated function to define and find the price and time points where they occur. Requires tweaking until they match close enough with reality of what a trader would see or draw.

sl_level and tp_level are the exit price. FIX