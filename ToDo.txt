Useful tools/gpt plugins:
https://askyourpdf.com/upload

To-Do:
0. Continue building things useful to improving trading results. General cleanup & condensing of code/functions where possible.
1. Modify functions to handle multiple coin pair df's. Download the next top 20 coins too.
2. Multiple TP/SL and trailing losses.

Techniques/How to optimize:
1. Determine best mixture of stats and things to base trades on. "ex: if volume on last candle > avg(volume) of the line, the PNL is slightly better"
2. Can try ML binary classification for W/L trade, or do it by raw net_pl, +-$, Would want to figure out which features correlate to winning trades, and which features correlate to the best/highest winning trades.
3. Right now everything assumes an optimal entry. Find Optimal TP/SL levels. Optimal trailing SL level. 
4. Figure out an optimal entry somewhere on the horizontal resistance line, other than the 3rd touchpoint 

Misc Things:
- Build some infrastructure to examine how features interact with the PNL.
- Adjust TP/SL/trailing strategy according to 'returns from entry' data. (Always exit after 50 candles if still in trade or whatever.)
- Good Analysis tools: https://pypi.org/project/QuantStats/ "(benchmark can be a pandas Series or ticker) qs.reports.html(stock, "SPY")"
- We want low drawdowns and good returns/low volatility/consistent: min(max_drawdown)
- Trades on lower timeframe (entry on 5 min) but looks at 15m/30m/1hr/daily also, just how professionals do.
- Always think outside the box.

price and simple indicators --> (This is btc_usdt_df)
complex indicators --> (This is resistance_lines_df)
trade results --> (This is trade_results_df)

e0 to e1 is, if majority turn negative, then perhaps that entry isn't the best. (And of course if most returns are negative then it's a bad strategy in general, and if you are exiting too early compared to the peak of the returns, then you can tweak the exits through this.). 

--> Make it so you can just pip install your trading package and then do 'backtesting(price_and_indicators_df,trades_df)' Where it gives you all the results.

sl_level and tp_level are the exit price. FIX

Notes:
- Think of more ways to improve trading strategy for horizontal lines
- Last thing to do is adjust functions to take in multiple coin pair df's at once.
- More stats outputs like from backtesting.py and QuantStats.