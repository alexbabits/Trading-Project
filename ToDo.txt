To-do:
- Write list to loop through for multiple df's for functions/plots (df and resistance_df), since now have multiple coins. (Right now we are just using the btc one.)
- Look at returns and use statistics/correlations to find a good strategy.
- Multiple TP's and maybe SL's. X% out at each level. Find optimal amount and number. Trailing stop loss if that makes sense. Find optimal amount and number.
- Add trading fees (0.05%) per execution. (he said 20bps)
- Some NaN/missing rows in the bulk .csv's. pre-process and remove those?


After the trades and returns are calculated:
- Optimization should only begin once you have all 20 coins dataframes ready to analyze. Should be rigious meaning strat works on all coins.
- pull random samples for backtesting. Pull like 0.5-5% of total trades randomly 10,000 times to get bell curve of results.
- Make sure no peak ahead (don't know all the number of touchpoints in advance for example, only know up to the live candle)


Stats:
- position size (could be variable based on juiciness of trade or risk amount)
- risk/reward ratio
- win %, lose %, and win % needed to breakeven (based on r:r).
- volume
- binance num trades during candle
- Distance from MA
- RSI

Techniques:
- Use spearman (non-linear) and/or pearson correlation between features in df and PNL (ML) to determine best mixture of stats to base trades on.
- "ex: if volume on last candle > avg(volume) of the line, the PNL is slightly better".
