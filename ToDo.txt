To-Do:
0. Continue building things useful to improving trading results. General cleanup & condensing of code/functions where possible.
1. Modify functions to handle multiple coin pair df's. Download the next top 20 coins too.
2. Multiple TP/SL and trailing losses.

Techniques/How to optimize:
1. Determine best mixture of stats and things to base trades on. "ex: if volume on last candle > avg(volume) of the line, the PNL is slightly better"
2. Need info about the surrounding candles. Can try ML binary classification for W/L trade, or do it by raw net_pl, +-$, Would want to figure out which features correlate to winning trades, and which features correlate to the best/highest winning trades.
3. Right now everything assumes an optimal entry. Find Optimal TP/SL levels. Optimal trailing SL level. 
4. Figure out an optimal entry somewhere on the horizontal resistance line, other than the 3rd touchpoint 

Misc Things:
- Modify so you get stats from before the trade too a bit (maybe start of the line)
- Find Optimal TP's/SL's.
- Continue building the infrastructure for finding a good trading strategy with horizontal lines.
- Build some infrastructure to examine how features interact with the PNL.
- If returns tend to generally see maximum 'peak' after only 20-50 candles or something, then adjust TP/SL/trailing strategy accordingly. (Ex: if get to 50th candle, just exit position always, unless xyz reason to continue).
- Good Analysis tools: https://pypi.org/project/QuantStats/ "(benchmark can be a pandas Series or ticker) qs.reports.html(stock, "SPY")"
- We want low drawdowns and good returns/low volatility/consistent: min(max_drawdown)
- Trades on lower timeframe (entry on 5 min) but looks at 15m/30m/1hr/daily also, just how professionals do.
- Always think outside the box.

-Make very robust, general framework/pipeline. input trading strategy with xyz entry/stop/targets. output all the fancy features.
basically so u can put in any strategy and is gud
and u can load in any data and is gud
and u always get really detailed results and Graphs

1. feed it data, any kind you want (indicators too? or just OHLC+V?)
1.5 (Has indicators? Has xyz columns? etc. it filters all thru just fine regardless.)
1.75 basically have bunch of boolean flags on true or false if data includes sentiment columns, indicator columns, OHLC+V columns, etc.
?????????????????2. analysis of data for returns/features/lines/channels/indicators/sentiment/etc (Each their own separate buckets u can fill if you like.)
2.25 define lines any way you like! with any metric! You give them like 5 different ways to choose from!
3. make strategy based on those analysis, any mix you like. U want to be able to plug and play. Horizontal lines + RSI divs? No problem!
4. beautiful output of statistics for the trades (copy backtesting.py and QuantStats)
5. see how u cud make strategy better thru better mix of shit based on...? #3 or #2

see res lines literally as physics equations, based on velocity of money and weight of 'ball', chance of breakout, and then breakout size. Find correlation between volume/weight and breakout frequency and amount.

