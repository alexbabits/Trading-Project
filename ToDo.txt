To-Do:
1. Modify functions to handle multiple coin pair df's. Download the next top 20 coins too.

Techniques/How to optimize:
1. Use ML to determine best mixture of stats to base trades on. "ex: if volume on last candle > avg(volume) of the line, the PNL is slightly better"
2. Need info about the surrounding candles. Can do ML binary classification for W/L trade, or do it by raw net_pl, +-$, Would want to figure out which features correlate to winning trades, and the highest winning trades.
3. Right now assumes optimal entry. Find Optimal TP/SL levels. Optimal trailing SL level. 
4. Figure out an optimal entry somewhere on the horizontal resistance line, other than the 3rd touchpoint 


Verification of trading results after optimization:
- Pull random samples for backtesting. Pull like 0.5-5% of total trades randomly, 10,000 times, to get bell curve of results.


Misc Things:
- ML to determine a single trades expected PNL (input the features) (After you've trained a model on your existing data).
- SL probs best if small?
- Build the infrastructure for finding a good trading strategy with horizontal line for now. I have bulk data now, and last thing to do will be to adjust functions to take in multiple df's for each pair and return them back.
- Build some infrastructure to examine how features interact with the PNL.
- If returns tend to 'peak' after only 20 candles or 50 candles, then adjust holding strategy accordingly while in trade. (Ex: if get to 50th candle, just exit position always).