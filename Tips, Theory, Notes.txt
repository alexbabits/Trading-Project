Tips:
- GOAL: Low drawdowns, Low Volatility, High returns. min(max_drawdown), min(max_volatility), max(returns)
- Returns from Entry is useful to look at to see how the trades go from entry until X number of candles afterwards. good ideas for Entries/TP levels/SL levels/hold time. Other plots and distributions and stats helpful in general to see how trades went.
- Optimizing stuff: "If volume on last candle > avg(volume) of the line, the PNL is slightly better."
- Min length trade of 0 in trades_df is working as intended --> exits that happened within the entry candle, since entries are on the candles open.
- For returns plot, e+0 is working as intended, since entries are at the candle opens, this represents the returns within that first entry candle.
- Trades on lower timeframe (entry on 5 min) but looks at 15m/30m/1hr/daily also, just how professionals do.

************Simple vs Complex Indicators************

--> 'simple/objective indicators': RSI/MACD/ATR/EMA/SMA/etc. 100% based on price & time with simple formula. Calculable in single line of code, everyone agrees that it is indeed the only and correct way to do it.

--> 'complex/subjective indicators': resistance lines, support lines, channels (with 0 or non-0 slopes), price zones, RSI divs, Fib retracements. Requires sophisticated function to define and find the price and time points where they occur. Requires tweaking until they match close enough with reality of what a trader would see or draw.


************How TP's, SL's, and Trailing SL's Work************
‘sl_main_hit’ = (exit – entry) * (pos size/entry) = (22945.88 – 23064.57) *(10000/23064.57) = -51.45

tp1_hit_then_tsl1 = You got out 50% at tp1, and 50% out at tsl1.
Tp1: (exit-entry) * (pos size*0.5/entry) = (24014.83 - 23889.99)*(5000/23889.99) = 26.1
Tsl1: (exit-entry) * (pos size*0.5/entry) = (23889.99 - 23889.99)*(5000/23889.99) = 0
Sum = 26.1 + 0 = 26.1

tp2_hit_then_tsl2 = You got out 50% at tp1, 25% out at tp2, and 25% out at tsl2 (which is tp1).
tp1: (exit-entry) * (pos size*0.5/entry) = (23150.55 – 23046.75)*(5000/23046.75) = 22.5
tp2: (exit-entry) * (pos size*0.25/entry) = (23202.45 – 23046.75)*(2500/23046.75) = 16.9
tsl2: (exit-entry) * (pos size*0.25/entry) = (23150.55 – 23046.75)*(2500/23046.75) = 11.25
Sum = 22.5+11.25+16.9 = 61.9

tp3_hit = You got out 50% at tp1, 25% out at tp2, 25% out at tp3.
(exit-entry) * (pos size*0.5/entry) = (23206.39 – 23056.31)*(5000/23056.31) = 32.5
(exit-entry) * (pos size*0.25/entry) = (23281.43 – 23056.31)*(2500/23056.31) = 24.4
(exit-entry) * (pos size*0.25/entry) = (23356.47 – 23056.31)*(2500/23056.31) = 32.54
Sum = 32.5+24.4+32.54 = 89.44


************Noteable Functions************

########### find_horizontal_resistance_lines_and_touch_points ###########
--> It finds horizontal lines. Based on ATR for touchpoints and describes where a candle is in space. Ignores clumped candles via waiting period.


########### trading_strategy ###########
--> Trading Strategy focused around breakout of horizontal resistance lines. Includes trailing stop losses and multiple take profits.


########### returns_from_entry ###########
--> It's a function that creates a dictionary of every trade from it's entry to X number of candles in the future to look at the returns.


************Future Thoughts & Channels************

--> Non-zero slope concept of horizontal resistance and support lines. Bottom slope is support line, top slope is resistance line. With the added problem that both lines need to have similar/same slope in order for the channel to exist. So channels are quite rare. Based on least squares for the middle/top/bottom lines.
--> What constitutes a touch point/area? Can make this hyper complex with weights and all sorts of clever thresholds (weighting wicks, volatility and ATR, clumping amount, time between touches, etc.)
--> Would you generate the top line/bottom line or the middle line first and just use that slope? Minimum threshold to generate a channel.
--> Horizontal Support Lines (Very similar to Horiontal Resistance Lines).
--> Horizontal Channels: Horizontal support+resistance lines using this code.
--> Slanted Channels: non-zero slope support+resistance lines would create channels. Probs use horizontal line ideas and least squares combined.
--> ML could/will be used to optimize Entry/SL/TP/trailing SL levels, based on the features (indicators) and target ('returns' or 'net_pl_with_fee').